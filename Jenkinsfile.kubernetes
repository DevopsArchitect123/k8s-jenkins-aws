pipeline {

    agent any
    stages {
        stage('NPM build') {
          steps {
            dir('app'){
              echo 'Npm build is in progress'
              sh '''
                npm install
              '''
            }
          }
        }

        stage('Docker build') {
          steps {
            echo 'Docker build is in progress'
            sh '''
            docker build -t appjs .
            '''
          }
        }

        stage('Push image') {
          steps {
            echo 'Push image is in progress'
            sh '''
            docker tag appjs:latest box2323:latest public.ecr.aws/l2h4n7n0/box2323:latest 
            docker push box2323:latest public.ecr.aws/l2h4n7n0/box2323:latest
            '''
          }
        }

        stage('Deploy/update load balancer svc') {
          steps {
            echo 'Deploy/update load balancer svc is in progress'
            sh '''
            kubectl apply -f deploy-lb.yml
            '''
          }
        }

        stage('Deploy secrets') {
            environment {
             SECRET_FILE_ID = credentials('secret-yml')
            }
          steps {
            sh("cat ${SECRET_FILE_ID} > secret.yml")
            sh '''
            kubectl apply -f secret.yml
            '''
          }
        }

        stage('Deploy/update app deployment/replicaset') {
          steps {
            echo 'Deploy/update app is in progress'
            sh '''
            kubectl apply -f deploy-app.yml
            '''
          }
        }

        stage('Output URL') {
          steps {
            echo 'Outputing the app URL in preogress'
            sh '''
            sleep 10
            kubectl get svc > URL.txt
            grep -h LoadBalancer URL.txt
            '''
          }
        }
    }

}
